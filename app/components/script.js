// Interactive functionality for Integra Markets Web UI
class IntegraApp {
    constructor() {
        this.currentTab = 'today';
        this.activeFilters = {
            wire: 'All',
            prediction: 'All (5)'
        };
        this.init();
    }

    init() {
        this.setupTabNavigation();
        this.setupFilterButtons();
        this.setupInteractiveElements();
        this.loadInitialData();
    }

    // Tab Navigation
    setupTabNavigation() {
        const tabButtons = document.querySelectorAll('.tab-btn');
        
        tabButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                const tabName = button.dataset.tab;
                this.switchTab(tabName);
            });
        });
    }

    switchTab(tabName) {
        // Update active tab button
        document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
        document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');

        // Show/hide screens
        document.querySelectorAll('.screen-container').forEach(screen => {
            screen.classList.add('hidden');
        });
        
        const targetScreen = document.getElementById(`${tabName}-screen`);
        if (targetScreen) {
            targetScreen.classList.remove('hidden');
        }

        this.currentTab = tabName;
    }

    // Filter Functionality
    setupFilterButtons() {
        const filterButtons = document.querySelectorAll('.filter-btn');
        
        filterButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                const container = button.closest('.filters-container');
                const screenContainer = button.closest('.screen-container');
                
                // Remove active class from siblings
                container.querySelectorAll('.filter-btn').forEach(btn => btn.classList.remove('active'));
                
                // Add active class to clicked button
                button.classList.add('active');
                
                // Handle filter logic based on screen
                if (screenContainer.id === 'today-screen') {
                    this.activeFilters.wire = button.textContent.trim();
                    this.filterWireNews(this.activeFilters.wire);
                } else if (screenContainer.id === 'prediction-screen') {
                    this.activeFilters.prediction = button.textContent.trim();
                    this.filterPredictionMarkets(this.activeFilters.prediction);
                }
            });
        });
    }

    // Interactive Elements
    setupInteractiveElements() {
        // AI Insight dismiss button
        const dismissButton = document.querySelector('.dismiss-button');
        if (dismissButton) {
            dismissButton.addEventListener('click', () => {
                const aiCard = document.querySelector('.ai-card-outer-container');
                if (aiCard) {
                    aiCard.style.display = 'none';
                    this.showToast('AI Insight dismissed');
                }
            });
        }

        // AI Footer link
        const aiFooter = document.querySelector('.ai-footer');
        if (aiFooter) {
            aiFooter.addEventListener('click', () => {
                this.showModal('AI Analysis Info', 'This section provides insights generated by our AI models, analyzing market news and data.');
            });
        }

        // News card interactions
        this.setupNewsCardInteractions();

        // Market card interactions
        this.setupMarketCardInteractions();


        // FAB button
        const fab = document.querySelector('.fab');
        if (fab) {
            fab.addEventListener('click', () => {
                this.showModal('Create Market', 'Create a new prediction market. This feature will be available soon.');
            });
        }

        // Show more button
        const showMoreBtn = document.querySelector('.show-more-button');
        if (showMoreBtn) {
            showMoreBtn.addEventListener('click', () => {
                this.loadMoreMarkets();
            });
        }
    }

    setupNewsCardInteractions() {
        const newsCards = document.querySelectorAll('.news-card');
        
        newsCards.forEach(card => {
            card.addEventListener('click', (e) => {
                if (e.target.closest('.source-link') || e.target.closest('.share-btn')) {
                    return; // Don't trigger card click for these elements
                }
                
                const headline = card.querySelector('.headline').textContent;
                this.showModal('News Article', `Opening: ${headline}`);
            });

            // Source link clicks
            const sourceLink = card.querySelector('.source-link');
            if (sourceLink) {
                sourceLink.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    const source = sourceLink.textContent.replace('open_in_new', '').trim();
                    this.showToast(`Opening ${source} article`);
                });
            }

            // Share button clicks
            const shareBtn = card.querySelector('.share-btn');
            if (shareBtn) {
                shareBtn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    this.shareArticle(card);
                });
            }
        });
    }

    setupMarketCardInteractions() {
        const marketCards = document.querySelectorAll('.market-card');
        
        marketCards.forEach(card => {
            card.addEventListener('click', (e) => {
                if (e.target.closest('.alert-button') || e.target.closest('.market-option-box')) {
                    return; // Don't trigger card click for these elements
                }
                
                const title = card.querySelector('.market-title').textContent;
                this.showModal('Market Details', `Opening market: ${title}`);
            });

            // Alert button clicks
            const alertBtn = card.querySelector('.alert-button');
            if (alertBtn) {
                alertBtn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    this.toggleAlert(alertBtn);
                });
            }

            // Yes/No option clicks
            const optionBoxes = card.querySelectorAll('.market-option-box');
            optionBoxes.forEach(box => {
                box.addEventListener('click', (e) => {
                    e.stopPropagation();
                    this.selectMarketOption(card, box);
                });
            });
        });
    }

    // Data filtering
    filterWireNews(filter) {
        const newsCards = document.querySelectorAll('.news-card');
        
        newsCards.forEach(card => {
            const sentimentTag = card.querySelector('.sentiment-text');
            const sentiment = sentimentTag ? sentimentTag.textContent : '';
            
            if (filter === 'All' || sentiment === filter.toUpperCase()) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });

        this.showToast(`Filtered by: ${filter}`);
    }

    filterPredictionMarkets(filter) {
        const marketCards = document.querySelectorAll('.market-card');
        
        marketCards.forEach(card => {
            const category = card.querySelector('.market-category').textContent;
            
            if (filter === 'All (5)' || filter.includes(category)) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });

        this.showToast(`Filtered by: ${filter}`);
    }

    // Interactive actions
    shareArticle(card) {
        const headline = card.querySelector('.headline').textContent;
        
        if (navigator.share) {
            navigator.share({
                title: headline,
                text: 'Check out this market analysis from Integra Markets',
                url: window.location.href
            });
        } else {
            // Fallback: copy to clipboard
            navigator.clipboard.writeText(`${headline} - ${window.location.href}`);
            this.showToast('Article link copied to clipboard');
        }
    }

    toggleAlert(button) {
        const icon = button.querySelector('.material-icons');
        const isActive = icon.textContent === 'notifications_active';
        
        if (isActive) {
            icon.textContent = 'notifications_none';
            button.style.color = 'var(--text-secondary)';
            this.showToast('Alert disabled');
        } else {
            icon.textContent = 'notifications_active';
            button.style.color = 'var(--accent-data)';
            this.showToast('Alert enabled');
        }
    }

    selectMarketOption(card, selectedBox) {
        const allBoxes = card.querySelectorAll('.market-option-box');
        const isYes = selectedBox.querySelector('.market-option-label').textContent === 'Yes';
        
        // Remove all selections
        allBoxes.forEach(box => {
            box.classList.remove('selected-yes', 'selected-no');
            const checkmark = box.querySelector('.checkmark-circle');
            if (checkmark) {
                checkmark.remove();
            }
        });
        
        // Add selection to clicked box
        if (isYes) {
            selectedBox.classList.add('selected-yes');
            const checkmark = document.createElement('div');
            checkmark.className = 'checkmark-circle yes-bg';
            checkmark.innerHTML = '<span class="material-icons">check</span>';
            selectedBox.appendChild(checkmark);
            this.showToast('Selected: Yes');
        } else {
            selectedBox.classList.add('selected-no');
            const checkmark = document.createElement('div');
            checkmark.className = 'checkmark-circle no-bg';
            checkmark.innerHTML = '<span class="material-icons">check</span>';
            selectedBox.appendChild(checkmark);
            this.showToast('Selected: No');
        }
    }

    loadMoreMarkets() {
        this.showToast('Loading more markets...');
        
        // Simulate loading delay
        setTimeout(() => {
            this.showToast('No more markets to load');
        }, 1000);
    }

    // Data loading
    loadInitialData() {
        // Simulate initial data load
        console.log('Loading initial data...');
        // This is where you would integrate with your Python backend
        // to fetch real news and market data
    }

    // Utility functions
    showToast(message) {
        // Remove existing toast
        const existingToast = document.querySelector('.toast');
        if (existingToast) {
            existingToast.remove();
        }

        // Create toast element
        const toast = document.createElement('div');
        toast.className = 'toast';
        toast.textContent = message;
        toast.style.cssText = `
            position: fixed;
            bottom: 100px;
            left: 50%;
            transform: translateX(-50%);
            background-color: var(--bg-secondary);
            color: var(--text-primary);
            padding: 12px 20px;
            border-radius: 8px;
            border: 1px solid var(--divider);
            font-size: 14px;
            z-index: 1001;
            opacity: 0;
            transition: opacity 0.3s;
        `;

        document.body.appendChild(toast);
        
        // Animate in
        setTimeout(() => {
            toast.style.opacity = '1';
        }, 10);

        // Remove after delay
        setTimeout(() => {
            toast.style.opacity = '0';
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 300);
        }, 2000);
    }

    showModal(title, content) {
        // Remove existing modal
        const existingModal = document.querySelector('.modal-overlay');
        if (existingModal) {
            existingModal.remove();
        }

        // Create modal
        const modalOverlay = document.createElement('div');
        modalOverlay.className = 'modal-overlay';
        modalOverlay.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1002;
            opacity: 0;
            transition: opacity 0.3s;
        `;

        const modal = document.createElement('div');
        modal.style.cssText = `
            background-color: var(--bg-secondary);
            border-radius: 12px;
            padding: 20px;
            max-width: 400px;
            margin: 20px;
            border: 1px solid var(--divider);
        `;

        const modalTitle = document.createElement('h3');
        modalTitle.textContent = title;
        modalTitle.style.cssText = `
            color: var(--text-primary);
            margin-bottom: 15px;
            font-size: 18px;
            font-weight: 500;
        `;

        const modalContent = document.createElement('p');
        modalContent.textContent = content;
        modalContent.style.cssText = `
            color: var(--text-secondary);
            margin-bottom: 20px;
            line-height: 1.5;
        `;

        const closeButton = document.createElement('button');
        closeButton.textContent = 'Close';
        closeButton.style.cssText = `
            background-color: var(--accent-positive);
            color: var(--bg-primary);
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
        `;

        closeButton.addEventListener('click', () => {
            modalOverlay.style.opacity = '0';
            setTimeout(() => {
                if (modalOverlay.parentNode) {
                    modalOverlay.parentNode.removeChild(modalOverlay);
                }
            }, 300);
        });

        modal.appendChild(modalTitle);
        modal.appendChild(modalContent);
        modal.appendChild(closeButton);
        modalOverlay.appendChild(modal);
        document.body.appendChild(modalOverlay);

        // Animate in
        setTimeout(() => {
            modalOverlay.style.opacity = '1';
        }, 10);

        // Close on overlay click
        modalOverlay.addEventListener('click', (e) => {
            if (e.target === modalOverlay) {
                closeButton.click();
            }
        });
    }

    // API Integration methods (for future use)
    async fetchNewsData() {
        try {
            // This would integrate with your Python backend
            const response = await fetch('/api/news');
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Error fetching news:', error);
            return [];
        }
    }

    async fetchMarketData() {
        try {
            // This would integrate with your Python backend
            const response = await fetch('/api/markets');
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Error fetching markets:', error);
            return [];
        }
    }

    async fetchUserData() {
        try {
            // This would integrate with your auth system
            const response = await fetch('/api/user');
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Error fetching user data:', error);
            return null;
        }
    }

    // Dynamic content updates
    updateNewsCard(cardElement, newsData) {
        const headline = cardElement.querySelector('.headline');
        const summary = cardElement.querySelector('.summary');
        const sentiment = cardElement.querySelector('.sentiment-text');
        const score = cardElement.querySelector('.score-text');
        const source = cardElement.querySelector('.source-link');
        const timestamp = cardElement.querySelector('.timestamp');

        if (headline) headline.textContent = newsData.headline;
        if (summary) summary.textContent = newsData.summary;
        if (sentiment) sentiment.textContent = newsData.sentiment;
        if (score) score.textContent = newsData.score;
        if (source) source.textContent = newsData.source;
        if (timestamp) timestamp.textContent = newsData.timestamp;
    }

    updateMarketCard(cardElement, marketData) {
        const title = cardElement.querySelector('.market-title');
        const category = cardElement.querySelector('.market-category');
        const value = cardElement.querySelector('.market-value');
        const resolves = cardElement.querySelector('.market-info-value');
        const yesPercent = cardElement.querySelector('.yes-color');
        const noPercent = cardElement.querySelector('.no-color');

        if (title) title.textContent = marketData.title;
        if (category) category.textContent = marketData.category;
        if (value) value.textContent = marketData.value;
        if (resolves) resolves.textContent = marketData.resolves;
        if (yesPercent) yesPercent.textContent = marketData.yesPercent;
        if (noPercent) noPercent.textContent = marketData.noPercent;
    }
}

// Initialize the app when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    const app = new IntegraApp();
    
    // Make app globally accessible for debugging
    window.IntegraApp = app;
    
    console.log('Integra Markets Web UI loaded successfully');
});